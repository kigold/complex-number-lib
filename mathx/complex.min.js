var Complex=function(e,a){this.real=Number(e)||0,this.imag=Number(a)||0,this.toStr=function(){return this.imag<0?String(this.real)+this.imag+"i":this.real+"+"+this.imag+"i"},this.getValue=function(){return{real:this.real,imag:this.imag}},this.add=function(){for(var e=0;e<arguments.length;e++)operand=arguments[e],operand instanceof Complex?(this.real+=operand.real,this.imag+=operand.imag):"number"==typeof operand&&(this.real+=operand);return this.getValue()},this.subtract=function(){for(var e=0;e<arguments.length;e++)operand=arguments[e],operand instanceof Complex?(this.real-=operand.real,this.imag-=operand.imag):"number"==typeof operand&&(this.real-=operand);return this.getValue()},this.multiply=function(){for(var e=0;e<arguments.length;e++)if(operand=arguments[e],operand instanceof Complex){var a=this.real*operand.imag;a+=this.imag*operand.real,this.real*=operand.real,this.real+=this.imag*operand.imag*-1,this.imag=a}else"number"==typeof operand&&(this.real*=operand,this.imag*=operand);return this.getValue()},this.divide=function(e){if(e instanceof Complex){var a=new Complex(e.conjugate().real,e.conjugate().imag),t=new Complex(this.real,this.imag);t.multiply(a);var i=new Complex(e.real,e.imag);return i.multiply(a),this.real=t.real/i.real,this.imag=t.imag/i.real,this.getValue()}return"number"==typeof e?(this.real/=e,this.imag/=e,this.getValue()):void 0},this.conjugate=function(){return{real:this.real,imag:-1*this.imag}},this.magnitude=function(){return Math.sqrt(this.real*this.real+this.imag*this.imag)},this.isEqual=function(){for(var e=!0,a=0;a<arguments.length;a++)if(operand=arguments[a],operand instanceof Complex){if(this.real!=operand.real)return!1;if(this.imag!=operand.imag)return!1}else{if("number"==typeof operand&&0===this.imag&&this.real===operand)continue;e=!1}return e}};module.exports=Complex;